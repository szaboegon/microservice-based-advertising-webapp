name: dockercompose4658398787065314807
services:
  advertisingdb:
    container_name: advertising_db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: password@12345
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      advertising: null
    ports:
    - mode: ingress
      target: 1433
      published: "8001"
      protocol: tcp
  advertisingservice.webapi:
    build:
      context: D:\GitHub Repos\Public repos\microservice-based-advertising-webapp\StudentHousing
      dockerfile: AdvertisingService.WebAPI/Dockerfile
    container_name: advertising_service
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      DB_HOST: advertisingdb
      DB_NAME: advertising
      DB_SA_PASSWORD: password@12345
    expose:
    - "8002"
    image: adsvertisingservicewebapi
    labels:
      traefik.enable: "true"
      traefik.http.routers.advertisingservicewebapi.rule: Host(`localhost`) && PathPrefix(`/api/advertisement`)
    networks:
      advertising: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\User\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  clientapp:
    build:
      context: D:\GitHub Repos\Public repos\microservice-based-advertising-webapp\StudentHousing
      dockerfile: StudentHousing.ClientApp/Dockerfile
    container_name: client_app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5173
      published: "5173"
      protocol: tcp
    volumes:
    - type: bind
      source: D:\GitHub Repos\Public repos\microservice-based-advertising-webapp\StudentHousing\StudentHousing.ClientApp\Dockerfile
      target: app
      bind:
        create_host_path: true
    - type: volume
      target: app/node_modules
      volume: {}
  reverse-proxy:
    command:
    - --api.insecure=true
    - --providers.docker
    container_name: traefik
    image: traefik:v2.9
    networks:
      advertising: null
    ports:
    - mode: ingress
      target: 80
      published: "80"
      protocol: tcp
    - mode: ingress
      target: 443
      published: "443"
      protocol: tcp
    - mode: ingress
      target: 8080
      published: "8080"
      protocol: tcp
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      bind:
        create_host_path: true
networks:
  advertising:
    name: dockercompose4658398787065314807_advertising
  default:
    name: dockercompose4658398787065314807_default