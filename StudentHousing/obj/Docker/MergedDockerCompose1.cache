name: dockercompose4658398787065314807
services:
  advertisementdb:
    container_name: advertisementdb
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: password@12345
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      advertisement: null
    ports:
    - mode: ingress
      target: 1433
      published: "8001"
      protocol: tcp
  advertisementservice.webapi:
    build:
      context: D:\GitHub Repos\Public repos\microservice-based-advertising-webapp\StudentHousing
      dockerfile: AdvertisementService.WebAPI/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: AdvertisementService.WebAPI
      target: base
    container_name: advertisementservice
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DB_HOST: advertisementdb
      DB_NAME: advertisement
      DB_SA_PASSWORD: password@12345
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages
    expose:
    - "8002"
    image: adsvertisementervicewebapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/bin/Debug/net7.0/AdvertisementService.WebAPI.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
      traefik.enable: "true"
      traefik.http.routers.todowebapi.rule: Host(`localhost`) && Path(`/api/advertisement`)
    networks:
      advertisement: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: D:\GitHub Repos\Public repos\microservice-based-advertising-webapp\StudentHousing\AdvertisementService.WebAPI
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
      target: /root/.nuget/fallbackpackages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: D:\GitHub Repos\Public repos\microservice-based-advertising-webapp\StudentHousing
      target: /src
      bind:
        create_host_path: true
  reverse-proxy:
    command:
    - --api.insecure=true
    - --providers.docker
    container_name: traefik
    image: traefik:v2.9
    networks:
      advertisement: null
    ports:
    - mode: ingress
      target: 80
      published: "80"
      protocol: tcp
    - mode: ingress
      target: 443
      published: "443"
      protocol: tcp
    - mode: ingress
      target: 8080
      published: "8080"
      protocol: tcp
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      bind:
        create_host_path: true
networks:
  advertisement:
    name: dockercompose4658398787065314807_advertisement