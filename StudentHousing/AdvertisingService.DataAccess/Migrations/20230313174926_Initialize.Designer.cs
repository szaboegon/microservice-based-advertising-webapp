// <auto-generated />
using System;
using AdvertisingService.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdvertisingService.DataAccess.Migrations
{
    [DbContext(typeof(AdvertisementDbContext))]
    [Migration("20230313174926_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar")
                        .HasColumnName("city");

                    b.Property<string>("District")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar")
                        .HasColumnName("district");

                    b.Property<short>("PostalCode")
                        .HasColumnType("smallint")
                        .HasColumnName("postalCode");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar")
                        .HasColumnName("region");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar")
                        .HasColumnName("streetName");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar")
                        .HasColumnName("streetNumber");

                    b.Property<string>("UnitNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar")
                        .HasColumnName("unitNumber");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Budapest",
                            District = "XI.",
                            PostalCode = (short)1091,
                            Region = "Pest",
                            StreetName = "Király utca",
                            StreetNumber = "47.",
                            UnitNumber = "15."
                        },
                        new
                        {
                            Id = 2,
                            City = "Pécs",
                            PostalCode = (short)7600,
                            Region = "Baranya",
                            StreetName = "Kossuth utca",
                            StreetNumber = "12.",
                            UnitNumber = "10."
                        });
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Advertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("addressId");

                    b.Property<int>("AdvertiserId")
                        .HasColumnType("int")
                        .HasColumnName("advertiserId");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar")
                        .HasColumnName("description");

                    b.Property<bool>("Furnished")
                        .HasColumnType("bit")
                        .HasColumnName("furnished");

                    b.Property<int>("MonthlyPrice")
                        .HasColumnType("int")
                        .HasColumnName("monthlyPrice");

                    b.Property<double>("NumberOfRooms")
                        .HasColumnType("float")
                        .HasColumnName("numberOfRooms");

                    b.Property<bool>("Parking")
                        .HasColumnType("bit")
                        .HasColumnName("parking");

                    b.Property<double>("Size")
                        .HasColumnType("float")
                        .HasColumnName("size");

                    b.Property<DateTime>("UploadDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 3, 13, 18, 49, 26, 474, DateTimeKind.Local).AddTicks(3129))
                        .HasColumnName("uploadDate");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("CategoryId");

                    b.ToTable("Advertisements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            AdvertiserId = 1,
                            CategoryId = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibu",
                            Furnished = true,
                            MonthlyPrice = 250000,
                            NumberOfRooms = 3.0,
                            Parking = false,
                            Size = 70.0,
                            UploadDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            AdvertiserId = 2,
                            CategoryId = 2,
                            Description = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibu",
                            Furnished = false,
                            MonthlyPrice = 100000,
                            NumberOfRooms = 1.0,
                            Parking = true,
                            Size = 20.0,
                            UploadDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "apartment"
                        },
                        new
                        {
                            Id = 2,
                            Name = "room"
                        });
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int")
                        .HasColumnName("advertisementId");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("data");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Advertisement", b =>
                {
                    b.HasOne("AdvertisingService.BusinessLogic.Models.Address", "Address")
                        .WithOne("Advertisement")
                        .HasForeignKey("AdvertisingService.BusinessLogic.Models.Advertisement", "AddressId")
                        .IsRequired()
                        .HasConstraintName("FK_Advertisement_Address");

                    b.HasOne("AdvertisingService.BusinessLogic.Models.Category", "Category")
                        .WithMany("Advertisements")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Advertisement_Category");

                    b.Navigation("Address");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Image", b =>
                {
                    b.HasOne("AdvertisingService.BusinessLogic.Models.Advertisement", "Advertisement")
                        .WithMany("Images")
                        .HasForeignKey("AdvertisementId")
                        .IsRequired()
                        .HasConstraintName("FK_Image_Advertisement");

                    b.Navigation("Advertisement");
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Address", b =>
                {
                    b.Navigation("Advertisement");
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Advertisement", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Category", b =>
                {
                    b.Navigation("Advertisements");
                });
#pragma warning restore 612, 618
        }
    }
}
