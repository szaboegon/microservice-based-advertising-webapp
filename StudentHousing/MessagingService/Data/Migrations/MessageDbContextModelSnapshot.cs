// <auto-generated />
using System;
using MessagingService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MessagingService.Data.Migrations
{
    [DbContext(typeof(MessageDbContext))]
    partial class MessageDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MessagingService.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar")
                        .HasColumnName("content");

                    b.Property<DateTime>("DateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 5, 8, 22, 32, 52, 736, DateTimeKind.Local).AddTicks(1120))
                        .HasColumnName("dateTime");

                    b.Property<int>("PrivateChatId")
                        .HasColumnType("int")
                        .HasColumnName("privateChatId");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("receiverId");

                    b.Property<int>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("senderId");

                    b.HasKey("Id");

                    b.HasIndex("PrivateChatId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MessagingService.Models.PrivateChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Participant1Id")
                        .HasColumnType("int")
                        .HasColumnName("participant1Id");

                    b.Property<int>("Participant2Id")
                        .HasColumnType("int")
                        .HasColumnName("participant2Id");

                    b.HasKey("Id");

                    b.ToTable("PrivateChat");
                });

            modelBuilder.Entity("MessagingService.Models.Message", b =>
                {
                    b.HasOne("MessagingService.Models.PrivateChat", "PrivateChat")
                        .WithMany("Messages")
                        .HasForeignKey("PrivateChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Message_PrivateChat");

                    b.Navigation("PrivateChat");
                });

            modelBuilder.Entity("MessagingService.Models.PrivateChat", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
