version: '3.4'

networks:
  advertising:

services:
  traefik:
    container_name: traefik
    # The official v2 Traefik docker image
    image: traefik:v2.9
    networks:      
       - advertising
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock


  advertisingservice.webapi:
    container_name: advertising_service
    image: ${DOCKER_REGISTRY-}adsvertisingservicewebapi
    build:
      context: .
      dockerfile: AdvertisingService.WebAPI/Dockerfile
    networks:
       - advertising
    environment:
       - DB_HOST=advertisingdb
       - DB_NAME=advertising
       - DB_SA_PASSWORD=password@12345
    expose:
       - 8002
    labels:
       - traefik.enable=true
       - traefik.http.routers.advertisingservicewebapi.rule=Host(`localhost`) && PathPrefix(`/api/advertisement`)

       
  advertisingdb:
    container_name: advertising_db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
       - ACCEPT_EULA=Y
       - SA_PASSWORD=password@12345
    networks:
       - advertising
    ports:
       - 8001:1433    # Only needed for debugging, remove later
 
  identityservice:
    container_name: identity_service
    build:
        context: .
        dockerfile: IdentityService/Dockerfile
    networks: 
        - advertising
    environment:
       - DB_HOST=identitydb
       - DB_NAME=identity
       - DB_SA_PASSWORD=password@12345
    labels: 
       - traefik.enable=true
       - traefik.http.routers.identityservice.rule=Host(`localhost`) && PathPrefix(`/api/user`)

  identitydb:
    container_name: identity_db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
       - ACCEPT_EULA=Y
       - SA_PASSWORD=password@12345
    networks:
       - advertising
    ports:
       - 8002:1433

  clientapp:
    container_name: client_app
    build: 
        context: ./StudentHousing.ClientApp
        dockerfile: Dockerfile
    ports: 
       - 8081:80  
    networks:
       - advertising
    stdin_open: true
    tty: true
    labels:
       - traefik.enable=true
       - traefik.http.routers.clientapp.rule=Host(`localhost`)