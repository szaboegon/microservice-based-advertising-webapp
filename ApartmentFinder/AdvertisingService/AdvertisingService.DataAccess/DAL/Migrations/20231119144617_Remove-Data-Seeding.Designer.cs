// <auto-generated />
using System;
using AdvertisingService.DataAccess.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdvertisingService.DataAccess.DAL.Migrations
{
    [DbContext(typeof(AdvertisementDbContext))]
    [Migration("20231119144617_Remove-Data-Seeding")]
    partial class RemoveDataSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int")
                        .HasColumnName("advertisementId");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar")
                        .HasColumnName("city");

                    b.Property<string>("District")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar")
                        .HasColumnName("district");

                    b.Property<short>("PostalCode")
                        .HasColumnType("smallint")
                        .HasColumnName("postalCode");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar")
                        .HasColumnName("region");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar")
                        .HasColumnName("streetName");

                    b.Property<string>("StreetNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar")
                        .HasColumnName("streetNumber");

                    b.Property<string>("UnitNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar")
                        .HasColumnName("unitNumber");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Advertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertiserId")
                        .HasColumnType("int")
                        .HasColumnName("advertiserId");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar")
                        .HasColumnName("description");

                    b.Property<bool>("Furnished")
                        .HasColumnType("bit")
                        .HasColumnName("furnished");

                    b.Property<int>("MonthlyPrice")
                        .HasColumnType("int")
                        .HasColumnName("monthlyPrice");

                    b.Property<double>("NumberOfRooms")
                        .HasColumnType("float")
                        .HasColumnName("numberOfRooms");

                    b.Property<bool>("Parking")
                        .HasColumnType("bit")
                        .HasColumnName("parking");

                    b.Property<double>("Size")
                        .HasColumnType("float")
                        .HasColumnName("size");

                    b.Property<DateTime>("UploadDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 19, 15, 46, 17, 105, DateTimeKind.Local).AddTicks(7046))
                        .HasColumnName("uploadDate");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int")
                        .HasColumnName("advertisementId");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("data");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Address", b =>
                {
                    b.HasOne("AdvertisingService.BusinessLogic.Models.Advertisement", "Advertisement")
                        .WithOne("Address")
                        .HasForeignKey("AdvertisingService.BusinessLogic.Models.Address", "AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Address_Advertisement");

                    b.Navigation("Advertisement");
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Advertisement", b =>
                {
                    b.HasOne("AdvertisingService.BusinessLogic.Models.Category", "Category")
                        .WithMany("Advertisements")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Advertisement_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Image", b =>
                {
                    b.HasOne("AdvertisingService.BusinessLogic.Models.Advertisement", "Advertisement")
                        .WithMany("Images")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Image_Advertisement");

                    b.Navigation("Advertisement");
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Advertisement", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Images");
                });

            modelBuilder.Entity("AdvertisingService.BusinessLogic.Models.Category", b =>
                {
                    b.Navigation("Advertisements");
                });
#pragma warning restore 612, 618
        }
    }
}
